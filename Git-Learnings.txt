Git learning

Some basic git commands to start with:
		git version- to know the version of git installed in yr computer
		git config --global user.name " "  -to set the username
		git config --global user.email " " -to set the email
		git config --global --list         -to list the global settings done
		git clone  "Http URL for Github"  -to clone the github project( remote repository) to local machine you are working(local repository)
		git status -to check the status of our local working directory compared to the already git local repository
		git add <filenme> -to add the untracked file into the git staging area
		git commit -m "comment for commit" -to commit your changes into your local repository
		git push origin master  -to push your changes into the github remote repository
		
Integrating Notepad++ with Git
		set the notepad++ path env variable and type the notepad++ command in the bash terimal to check the notepad++ is launched
		notepad++ .bash_profile -to create a new file to set the alias for notepad++
		type alias npp='notepad++.exe -multiInst -nosession'
		Now close the notepad++ and bash terminal
		Again open the git bash terminla and type the alias command npp to see the notepad++ getting launched
		To set the core editor for git as notepad++ type the command git config --global core.editor "notepad++.exe -multiInst -nosession"
		Now type the command git config --global -e to edit the global config using notepad++

some basic linux commands:
		cd <directoryname> -to change the directory
		ls -to list all the files and folders in  the pwd
		ls -al to list all the files and also the .git folder
		rm -rf <folder name> to delete the folder
Git basic commands:
		git init -to start a fresh project
		git pull origin master/main -to pull or update the working directory against the remote repository
		Commands for Tracked files:
				git ls-files to see all the files that are being tracked by the git	
				git commit -am to add and commit the modified file at once(in single command)
		Editing file:
				Edit the file in the editor and add the modified changes to the staging area
				Again edit the same file and check the git status command..git shows both that the file needs to be commited from staging area 
				and also the changes that need to be added to the staging area
		Recursive adding:
				git add . this will add all the files recursively into the staging area 
		Backout Changes:
				git reset HEAD <filename> to remove the modified file from the git staging area
				git restore <filename> to remove the changes made in the file(revert back the file to the last commited version)
		Rename and moving a file:
		        git mv <oldfilename> <newFilename> this will rename the file.
		Deleting files:
		        git rm <filename> to delete the file from the git
				